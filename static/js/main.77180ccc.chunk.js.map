{"version":3,"sources":["analysis/utils.js","charts/barchart.js","charts/colors.js","charts/radar.js","charts/pie.js","charts/brushbar.js","analysis/utils-ui.jsx","analysis/index.js","components/loader.js","components/icon.js","components/file-upload.js","App.js","index.js"],"names":["formatNumber","Utils","number","padding","string","_Utils$date","date","formatDate","utilFormatTime","formatTime","countDaysDiffBtnDates","formatDateAndTime","d","parseLine","line","re","arguments","length","undefined","attempt","a","exec","_a","Object","slicedToArray","month","day","year","hour","minute","sender","content","concat","formatDateParse","time","toDate","c","datestr","Date","countWordsLine","split","getTotals","n","firstMessage","lastMessage","console","log","firstTime","lastTime","nDays","_count","map","nWords","nChars","reduce","b","count","MyBarChart","data","this","props","react_default","createElement","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","PureComponent","colors","nColors","getColor","idx","Example","_this$props","labels","cx","cy","outerRadius","l","i","key","name","stroke","fillOpacity","onMouseEnter","onPieEnter","innerRadius","paddingAngle","label","entry","index","y","verticalAlign","wrapperStyle","lineHeight","jsfiddleUrl","renderBrushBarChart","objMap","rt","arr","fn","r","keys","U","messages","k","objectSpread2","brushbar_Example","renderVizBox","value","analysis","_ref","lines","filter","Error","senders","times","days","all","hourIndex","Number","substr","chars","words","total","className","UI","barchart_MyBarChart","radar_Example","pie_Example","Loader","React","Component","Icon","FileUpload","onChange","e","_this","onChangeHandler","accept","type","icon_Icon","App","classCallCheck","_super","call","event","setState","isLoading","file","target","files","fileReader","FileReader","onloadend","result","isAnalyzed","readAsText","reset","state","bind","assertThisInitialized","_this2","_this$state","loader_Loader","onClick","file_upload_FileUpload","renderBody","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oQAEQA,EAAiBC,IAAMC,OAAvBF,aACAG,EAAYF,IAAMG,OAAlBD,QACRE,EAIIJ,IAAMK,KAHRC,EADFF,EACEE,WACYC,EAFdH,EAEEI,WACAC,EAHFL,EAGEK,sBAGIC,EAAoB,SAACC,GAAD,OAAOL,EAAWK,GAAK,MAAQJ,EAAeI,IAqClEC,EAAY,SAAZA,EACJC,GAGG,IAFHC,EAEGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFE,yEACLG,EACGH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADO,EAEJI,EAAIL,EAAGM,KAAKP,GAGlB,GAAIM,GAAkB,IAAbA,EAAEH,OAAc,CAEvB,IAAAK,EAAAC,OAAAC,EAAA,EAAAD,CAA6DH,EAA7D,GAAUK,GAAVH,EAAA,GAAAA,EAAA,IAAiBI,EAAjBJ,EAAA,GAAsBK,EAAtBL,EAAA,GAA4BM,EAA5BN,EAAA,GAAkCO,EAAlCP,EAAA,GAA0CQ,EAA1CR,EAAA,GAAkDS,EAAlDT,EAAA,GAMA,MAAO,CAAEhB,KAxBW,SAACoB,EAAKD,EAAOE,GACnC,WAAAK,OAAYL,EAAZ,KAAAK,OAAoB7B,EAAQsB,EAAO,GAAnC,KAAAO,OAAyC7B,EAAQuB,EAAK,IAoBvCO,CAAgBP,EAAKD,EAAOE,GAG1BO,KApBA,SAACN,EAAMC,GACxB,SAAAG,OAAU7B,EAAQyB,EAAM,GAAxB,KAAAI,OAA8B7B,EAAQ0B,EAAQ,GAA9C,OAiBepB,CAAWmB,EAAMC,GAETC,SAAQC,WAG/B,OAAgB,IAAZZ,EAEKN,EACLC,EACA,mEACA,GAIG,MA8DHqB,EAAS,SAACC,GACd,IAAMC,EAAUD,EAAE9B,KAAO,IAAM8B,EAAEF,KAEjC,OAAO,IAAII,KAAKD,IAEZE,EAAiB,SAACzB,GAAD,OAAUA,EAAK0B,MAAM,OAAOvB,QAkBtCwB,EAAY,SAACV,GACxB,IAAMW,EAAIX,EAAQd,OACZ0B,EAAeZ,EAAQ,GACvBa,EAAcb,EAAQW,EAAI,GAEhCG,QAAQC,IAAI,CAAEH,eAAcC,gBAE5B,IAAMG,EAAYZ,EAAOQ,GACnBK,EAAWb,EAAOS,GAElBK,EAAQvC,EAAsBqC,EAAWC,GAE/CE,EA5BY,SAACnB,GACb,OAAOA,EACJoB,IAAI,SAACf,GAIJ,MAAO,CAAEgB,OAHMb,EAAeH,EAAEL,SAGfsB,OAFFjB,EAAEL,QAAQd,UAI1BqC,OAAO,SAAClC,EAAGmC,GACV,MAAO,CACLH,OAAQhC,EAAEgC,OAASG,EAAEH,OACrBC,OAAQjC,EAAEiC,OAASE,EAAEF,UAiBAG,CAAMzB,GAEjC,MAAO,CAAEW,IAAGK,YAAWC,WAAUC,QAAOG,OAFxCF,EAAQE,OAEwCC,OAFhDH,EAAgBG,wBCvKGI,8JACnB,WACE,IAAQC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAKHG,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRP,KAAMA,EACNQ,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGvCT,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAeQ,gBAAgB,QAC/BV,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAOS,QAAQ,SACfX,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,MACAF,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,MACAF,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,MACAF,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAKS,QAAQ,QAAQC,KAAK,aAjBrB,YAL2BC,iBCLlCC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACjEC,EAAUD,EAAO1D,OAGV4D,EAAW,SAAAC,GAAG,OAAIH,EAAOG,EAAMF,ICGvBG,8JACnB,WACE,IAAAC,EAAyBrB,KAAKC,MAAtBF,EAARsB,EAAQtB,KAAMuB,EAAdD,EAAcC,OAEd,OACEpB,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAYmB,GAAI,IAAKC,GAAI,IAAKC,YAAa,IAAKpB,MAAO,IAAKC,OAAQ,IAAKP,KAAMA,GAC7EG,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,MACAF,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAgBS,QAAQ,SACxBX,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,MACCkB,EAAO9B,IAAI,SAACkC,EAAGC,GACd,OAAOzB,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAOwB,IAAKD,EAAGE,KAAMH,EAAGb,QAASa,EAAGI,OAAQZ,EAASS,GAAIb,KAAMI,EAASS,GAAII,YAAa,OAElG7B,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,cAZ6BW,iBCAhBK,8JACnB,WACE,IAAQrB,EAASC,KAAKC,MAAdF,KACR,OACEG,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAAK0B,aAAchC,KAAKiC,YACpD/B,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CACEL,KAAMA,EACNwB,GAAI,IACJC,GAAI,IACJU,YAAa,GACbT,YAAa,GACbX,KAAK,UACLqB,aAAc,EACdtB,QAAQ,QACRuB,OAAK,GAGHrC,EAAKP,IAAI,SAAC6C,EAAOC,GAAR,OAAkBpC,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAMwB,IAAG,QAAAvD,OAAUiE,GAASxB,KAAMI,EAASoB,GAAQF,OAAK,OAIvFlC,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,cArB6BW,iBCChBK,8JAGnB,WACE,IAAAC,EAAyBrB,KAAKC,MAAtBF,EAARsB,EAAQtB,KAAMuB,EAAdD,EAAcC,OACd,OACEpB,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRP,KAAMA,EACNQ,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGvCT,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAeQ,gBAAgB,QAC/BV,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAOS,QAAQ,SACfX,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,MACAF,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,MAEAF,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAemC,EAAG,EAAGT,OAAO,SAC5B5B,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAOS,QAAQ,OAAOP,OAAQ,GAAIwB,OAAO,YAExCR,EAAO9B,IAAI,SAACkC,EAAGC,GACd,OAAOzB,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAKwB,IAAKD,EAAGd,QAASa,EAAGZ,KAAMI,EAASS,OAEjDzB,EAAAzC,EAAA0C,cAACC,EAAA,EAAD,CAAQoC,cAAc,MAAMC,aAAc,CAAEC,WAAY,kBAzB3B3B,iBAAhBK,EACZuB,YAAc,6CCAhB,IAwBMC,EAAsB,SAACC,EAAQvB,GAC1C,IAAMwB,ENbiB,SAACC,GAAuB,IAAlBC,EAAkB3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,SAACI,GAAD,OAAOA,GACnCwF,EAAI,GAcV,OAZArF,OAAOsF,KAAKH,GAAKvD,IAAI,SAAC2B,GACpB,OAAOvD,OAAOsF,KAAKH,EAAI5B,IAAM3B,IAAI,SAACvC,GAOhC,OANKgG,EAAEhG,KACLgG,EAAEhG,GAAK,IAGTgG,EAAEhG,GAAGkE,GAAO6B,EAAGD,EAAI5B,GAAKlE,KAEjB,MAIJgG,EMFIE,CAAYN,EAAQ,SAACpF,GAAD,OAAOA,EAAE2F,WAClCH,EAAIrF,OAAOsF,KAAKJ,GAAItD,IAAI,SAAC6D,GAAD,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAA,CAC5BiE,KAAMwB,GACHP,EAAGO,MAGR,OAAOnD,EAAAzC,EAAA0C,cAACoD,EAAD,CAAexD,KAAMkD,EAAG3B,OAAQA,KAG5BkC,EAAe,SAACpB,EAAOqB,GAAR,OAC1BvD,EAAAzC,EAAA0C,cAAA,WACGiC,EADH,KACYe,EAAeM,KCxCdC,EAAA,SAAAC,GAAc,IAGrBvF,EPsEkB,SAACwF,GAAD,OACxBA,EAAMpE,IAAI,SAACrC,GAAD,OAAUD,EAAUC,KAAO0G,OAAO,SAAC1G,GAAD,OAAmB,OAATA,IOvEtCgG,CAHWQ,EAAX5D,KACGlB,MAAM,OAGzB,GAAuB,IAAnBT,EAAQd,OACV,MAAMwG,MAAM,wBAEd,IAAMC,EPqEkB,SAAC3F,GAQzB,IAPA,IAAM2F,EAAU,CACdC,MAAO,GACPC,KAAM,GACNC,IAAK,IAIEvC,EAAI,EAAGA,EAAI,GAAIA,IACtBoC,EAAQC,MAAMrC,GAAK,GA4CrB,OAzCAvD,EAAQoB,IAAI,SAACf,GACIsF,EAAQG,IAAIzF,EAAEN,UAK3B4F,EAAQG,IAAIzF,EAAEN,QAAU,EACxB4F,EAAQE,KAAKxF,EAAEN,QAAU,IAG3B4F,EAAQG,IAAIzF,EAAEN,SAAW,EAGzB,IAAMgG,EAAYC,OAAO3F,EAAEF,KAAK8F,OAAO,EAAG,IAEvBN,EAAQC,MAAMG,GAAW1F,EAAEN,UAG5C4F,EAAQC,MAAMG,GAAW1F,EAAEN,QAAU,GAGvC4F,EAAQC,MAAMG,GAAW1F,EAAEN,SAAW,EAKjC4F,EAAQE,KAAKxF,EAAEN,QAAQM,EAAE9B,QAC5BoH,EAAQE,KAAKxF,EAAEN,QAAQM,EAAE9B,MAAQ,CAAEyG,SAAU,EAAGkB,MAAO,EAAGC,MAAO,IAInE,IAAMtH,EAAI8G,EAAQE,KAAKxF,EAAEN,QAAQM,EAAE9B,MAOnC,OALAM,EAAEmG,UAAY,EACdnG,EAAEqH,OAAS7F,EAAEL,QAAQd,OACrBL,EAAEsH,OAAS3F,EAAeH,EAAEL,UAGrB,IAGF2F,EO1HSZ,CAAa/E,GACvBoG,EAAQrB,EAAY/E,GAEpBkD,EAAS1D,OAAOsF,KAAKa,EAAQG,KAEnC,OACEhE,EAAAzC,EAAA0C,cAAA,WACED,EAAAzC,EAAA0C,cAAA,KAAGsE,UAAU,cAAb,QACQtB,EAAoBqB,EAAMpF,WADlC,SACoD,IACjD+D,EAAoBqB,EAAMnF,WAE7Ba,EAAAzC,EAAA0C,cAAA,oBAEAD,EAAAzC,EAAA0C,cAAA,UACED,EAAAzC,EAAA0C,cAAA,UAAKuE,EAAgB,aAAcF,EAAMzF,IACzCmB,EAAAzC,EAAA0C,cAAA,UAAKuE,EAAgB,SAAUF,EAAMlF,QACrCY,EAAAzC,EAAA0C,cAAA,UAAKuE,EAAgB,UAAWF,EAAM/E,SACtCS,EAAAzC,EAAA0C,cAAA,UAAKuE,EAAgB,eAAgBF,EAAM9E,UDpBrB,SAACmD,GAE7B,IAAMI,EAAIrF,OAAOsF,KAAKL,GAAQrD,IAAI,SAAC6D,GACjC,MAAO,CAAExB,KAAMwB,EAAGI,MAAOZ,EAAOQ,MAGlC,OAAOnD,EAAAzC,EAAA0C,cAACwE,EAAD,CAAU5E,KAAMkD,ICiBlByB,CAAkBX,EAAQG,KDdN,SAACnE,EAAMuB,GAChC,IAAM2B,EAAIrF,OAAOsF,KAAKnD,GAAMP,IAAI,SAAC2B,GAC/B,OAAOvD,OAAA0F,EAAA,EAAA1F,CAAA,CAAEiE,KAAMV,GAAQpB,EAAKoB,MAG9B,OAAOjB,EAAAzC,EAAA0C,cAACyE,EAAD,CAAY7E,KAAMkD,EAAG3B,OAAQA,ICU/BoD,CAAeX,EAAQC,MAAO1C,GDPP,SAACuB,GAE7B,IAAMI,EAAIrF,OAAOsF,KAAKL,GAAQrD,IAAI,SAAC6D,GAAD,MAAQ,CAAExB,KAAMwB,EAAGI,MAAOZ,EAAOQ,MAEnE,OAAOnD,EAAAzC,EAAA0C,cAAC0E,EAAD,CAAU9E,KAAMkD,ICIlByB,CAAkBX,EAAQG,KAC1BQ,EAAuBX,EAAQE,KAAM3C,KCjCvBwD,8JACnB,WACE,OAAO5E,EAAAzC,EAAA0C,cAAA,+BAFyB4E,IAAMC,WCArBC,8JACnB,WACE,IAAQpD,EAAS7B,KAAKC,MAAd4B,KACF4C,EAAS,SAAApG,OAAYwD,GAE3B,OAAO3B,EAAAzC,EAAA0C,cAAA,KAAGsE,UAAWA,WALSM,IAAMC,WCQnBE,8MACnBC,SAAW,SAACC,GACVC,EAAKpF,MAAMqF,gBAAgBF,gDAG7B,WACE,IAAMvD,EAAO7B,KAAKC,MAAM4B,MAAQ,OAEhC,OAAQ3B,EAAAzC,EAAA0C,cAAA,OAAKsE,UAAU,uBACrBvE,EAAAzC,EAAA0C,cAAA,OAAKsE,UAAU,eACbvE,EAAAzC,EAAA0C,cAAA,SAAOoF,OAAQvF,KAAKC,MAAMsF,OAAQC,KAAK,OAAO3D,KAAMA,EAAMsD,SAAUnF,KAAKC,MAAMkF,WAC/EjF,EAAAzC,EAAA0C,cAACsF,EAAD,CAAM5D,KAAK,sBAXqBkD,IAAMC,WCoF/BU,4DAlFb,SAAAA,EAAYzF,GAAO,IAAAoF,EAAA,OAAAzH,OAAA+H,EAAA,EAAA/H,CAAAoC,KAAA0F,IACjBL,EAAAO,EAAAC,KAAA7F,KAAMC,IAWRqF,gBAAkB,SAACQ,GACjBT,EAAKU,SAAS,CAAEC,WAAW,IAE3B,IAAMC,EAAOH,EAAMI,OAAOC,MAAM,GAE1BC,EAAa,IAAIC,WACvBD,EAAWE,UAAY,SAAC7I,GACtB,IAAMsC,EAAOqG,EAAWG,OAIxBlB,EAAKU,SAAS,CAAEhG,OAAMyG,YAHH,EAGeR,WAFhB,KAMpBI,EAAWK,WAAWR,IA3BLZ,EA8BnBqB,MAAQ,WAGNrB,EAAKU,SAAS,CAAES,YAFG,KA5BnBnB,EAAKsB,MAAQ,CACXX,WAAW,EACXQ,YAAY,EACZzG,KAAM,MAGRsF,EAAKC,gBAAkBD,EAAKC,gBAAgBsB,KAArBhJ,OAAAiJ,EAAA,EAAAjJ,CAAAyH,IATNA,gDAoCnB,WAAa,IAAAyB,EAAA9G,KACX+G,EAAwC/G,KAAK2G,MAArC5G,EAARgH,EAAQhH,KAAMyG,EAAdO,EAAcP,WAEd,OAFAO,EAA0Bf,UAGjB9F,EAAAzC,EAAA0C,cAAC6G,EAAD,MAGJR,GAAezG,EAgBlBG,EAAAzC,EAAA0C,cAAA,WACED,EAAAzC,EAAA0C,cAAA,SACED,EAAAzC,EAAA0C,cAAA,UAAQ8G,QAAS,kBAAMH,EAAKJ,UAC1BxG,EAAAzC,EAAA0C,cAACsF,EAAD,CAAM5D,KAAK,eADb,WAIF3B,EAAAzC,EAAA0C,cAACuD,EAAD,CAAU3D,KAAMA,KAnBhBG,EAAAzC,EAAA0C,cAAC+G,EAAD,CACE3B,OAAO,OACPC,KAAK,OACL3D,KAAK,OACLsD,SAAUnF,KAAKsF,wCAoBvB,WACE,OACEpF,EAAAzC,EAAA0C,cAAA,OAAKsE,UAAU,OACbvE,EAAAzC,EAAA0C,cAAA,UAAQsE,UAAU,cAChBvE,EAAAzC,EAAA0C,cAAA,oCACCH,KAAKmH,sBA5EEpC,IAAMC,YCNxBoC,IAASC,OAAOnH,EAAAzC,EAAA0C,cAACmH,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.77180ccc.chunk.js","sourcesContent":["import Utils from \"@nexys/utils\";\n\nconst { formatNumber } = Utils.number;\nconst { padding } = Utils.string;\nconst {\n  formatDate,\n  formatTime: utilFormatTime,\n  countDaysDiffBtnDates,\n} = Utils.date;\n\nconst formatDateAndTime = (d) => formatDate(d) + \" - \" + utilFormatTime(d);\n\nexport { formatNumber, formatDateAndTime };\n\n// todo add to utils\n/**\n * [description]\n * @param  {[type]}   arr [description]\n * @param  fn  function that maps the value that is transposed to a potential other value. By default returns same value\n * @return {[type]}       [description]\n */\nexport const transpose = (arr, fn = (a) => a) => {\n  const r = {};\n\n  Object.keys(arr).map((idx) => {\n    return Object.keys(arr[idx]).map((d) => {\n      if (!r[d]) {\n        r[d] = {};\n      }\n\n      r[d][idx] = fn(arr[idx][d]);\n\n      return true;\n    });\n  });\n\n  return r;\n};\n\nconst formatDateParse = (day, month, year) => {\n  return `20${year}-${padding(month, 2)}-${padding(day, 2)}`;\n};\n\nconst formatTime = (hour, minute) => {\n  return `${padding(hour, 2)}:${padding(minute, 2)}:00`;\n};\n\nconst parseLine = (\n  line,\n  re = /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2}), (\\d{1,2}):(\\d{2}) [AP]M - ([^:]+):(.*)/g, // regex with AM/PM\n  attempt = 1\n) => {\n  const a = re.exec(line);\n\n  // check if parsing was succesful and that we get the expected amount of fields\n  if (a && a.length === 8) {\n    /* eslint-disable no-unused-vars */\n    const [_, month, day, year, hour, minute, sender, content] = a;\n    /* eslint-enable no-unused-vars */\n\n    const date = formatDateParse(day, month, year);\n    const time = formatTime(hour, minute);\n\n    return { date, time, sender, content };\n  }\n\n  if (attempt === 1) {\n    // try  without AM/PM\n    return parseLine(\n      line,\n      /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2}), (\\d{1,2}):(\\d{2}) - ([^:]+):(.*)/g,\n      2\n    );\n  }\n\n  return null;\n};\n\nexport const getContent = (lines) =>\n  lines.map((line) => parseLine(line)).filter((line) => line !== null);\n\nexport const getSenders = (content) => {\n  const senders = {\n    times: {},\n    days: {},\n    all: {},\n  };\n\n  // init times\n  for (let i = 0; i < 24; i++) {\n    senders.times[i] = {};\n  }\n\n  content.map((c) => {\n    const sender = senders.all[c.sender];\n\n    // init object with new sender key\n    // do it both for `all` and days\n    if (!sender) {\n      senders.all[c.sender] = 0;\n      senders.days[c.sender] = {};\n    }\n\n    senders.all[c.sender] += 1;\n\n    // update hour attribute\n    const hourIndex = Number(c.time.substr(0, 2));\n\n    const senderHour = senders.times[hourIndex][c.sender];\n\n    if (!senderHour) {\n      senders.times[hourIndex][c.sender] = 0;\n    }\n\n    senders.times[hourIndex][c.sender] += 1;\n    // end hours\n\n    // update days attribute\n    // here we don't have to check whether sender already exist since it was added earlier, only check for day\n    if (!senders.days[c.sender][c.date]) {\n      senders.days[c.sender][c.date] = { messages: 0, chars: 0, words: 0 };\n    }\n\n    // dummy var\n    const d = senders.days[c.sender][c.date];\n\n    d.messages += 1;\n    d.chars += c.content.length;\n    d.words += countWordsLine(c.content);\n    // end days\n\n    return true;\n  });\n\n  return senders;\n};\n\nconst toDate = (c) => {\n  const datestr = c.date + \"T\" + c.time;\n\n  return new Date(datestr);\n};\nconst countWordsLine = (line) => line.split(/\\s+/).length;\n\nconst count = (content) => {\n  return content\n    .map((c) => {\n      const nWords = countWordsLine(c.content);\n      const nChars = c.content.length;\n\n      return { nWords, nChars };\n    })\n    .reduce((a, b) => {\n      return {\n        nWords: a.nWords + b.nWords,\n        nChars: a.nChars + b.nChars,\n      };\n    });\n};\n\nexport const getTotals = (content) => {\n  const n = content.length;\n  const firstMessage = content[0];\n  const lastMessage = content[n - 1];\n\n  console.log({ firstMessage, lastMessage });\n\n  const firstTime = toDate(firstMessage);\n  const lastTime = toDate(lastMessage);\n\n  const nDays = countDaysDiffBtnDates(firstTime, lastTime);\n\n  const { nWords, nChars } = count(content);\n\n  return { n, firstTime, lastTime, nDays, nWords, nChars };\n};\n","import React, {PureComponent} from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport default class MyBarChart extends PureComponent {\n  render() {\n    const { data } = this.props;\n\n    if (!data) {\n      return null;\n    }\n\n    return (\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"value\" fill=\"#8884d8\" />\n      </BarChart>\n    );\n  }\n}","const colors = ['#1f618d', '#6c3483', '#3498db', '#DAF7A6', '#FFC300', '#FF5733'];\nconst nColors = colors.length;\n\n// simple helper to make sure we never call a color that does not exist\nexport const getColor = idx => colors[idx % nColors];","import React, { PureComponent } from 'react';\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Legend\n} from 'recharts';\n\nimport { getColor } from './colors';\n\nexport default class Example extends PureComponent {\n  render() {\n    const { data, labels } = this.props;\n\n    return (\n      <RadarChart cx={300} cy={250} outerRadius={150} width={500} height={500} data={data}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"name\" />\n        <PolarRadiusAxis />\n        {labels.map((l, i) => {\n          return <Radar key={i} name={l} dataKey={l} stroke={getColor(i)} fill={getColor(i)} fillOpacity={0.6} />\n        })}\n        <Legend/>\n      </RadarChart>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie, Cell, Legend,\n} from 'recharts';\n\nimport { getColor } from './colors';\n\nexport default class Example extends PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\n        <Pie\n          data={data}\n          cx={120}\n          cy={200}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          dataKey=\"value\"\n          label\n        >\n          {\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={getColor(index)} label />)\n          }\n\n        </Pie>\n        <Legend/>\n      </PieChart>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport { getColor } from './colors';\n\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\n\n  render() {\n    const { data, labels } = this.props;\n    return (\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        \n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n\n        {labels.map((l, i) => {\n          return <Bar key={i} dataKey={l} fill={getColor(i)} />\n        })}\n        <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n      </BarChart>\n    );\n  }\n}\n","import React from \"react\";\n\nimport BarChart from \"../charts/barchart\";\nimport RadarChart from \"../charts/radar\";\nimport PieChart from \"../charts/pie\";\nimport BrushBarChart from \"../charts/brushbar\";\n\nimport * as U from \"./utils\";\n\nexport const renderBarChart = (objMap) => {\n  // turn object into array (right format for barchart)\n  const r = Object.keys(objMap).map((k) => {\n    return { name: k, value: objMap[k] };\n  });\n\n  return <BarChart data={r} />;\n};\n\nexport const renderRadar = (data, labels) => {\n  const r = Object.keys(data).map((idx) => {\n    return { name: idx, ...data[idx] };\n  });\n\n  return <RadarChart data={r} labels={labels} />;\n};\n\nexport const renderPieChart = (objMap) => {\n  // turn object into array (right format for barchart)\n  const r = Object.keys(objMap).map((k) => ({ name: k, value: objMap[k] }));\n\n  return <PieChart data={r} />;\n};\n\nexport const renderBrushBarChart = (objMap, labels) => {\n  const rt = U.transpose(objMap, (a) => a.messages);\n  const r = Object.keys(rt).map((k) => ({\n    name: k,\n    ...rt[k],\n  }));\n\n  return <BrushBarChart data={r} labels={labels} />;\n};\n\nexport const renderVizBox = (label, value) => (\n  <div>\n    {label}: {U.formatNumber(value)}\n  </div>\n);","import React from \"react\";\n\nimport * as U from \"./utils\";\nimport * as UI from \"./utils-ui\";\n\nexport default ({ data }) => {\n  const lines = data.split(\"\\n\");\n\n  const content = U.getContent(lines);\n  if (content.length === 0) {\n    throw Error(\"could not parse file\");\n  }\n  const senders = U.getSenders(content);\n  const total = U.getTotals(content);\n\n  const labels = Object.keys(senders.all);\n\n  return (\n    <div>\n      <p className=\"pull-right\">\n        from {U.formatDateAndTime(total.firstTime)} until{\" \"}\n        {U.formatDateAndTime(total.lastTime)}\n      </p>\n      <h2>Totals</h2>\n\n      <ul>\n        <li>{UI.renderVizBox(\"# messages\", total.n)}</li>\n        <li>{UI.renderVizBox(\"# days\", total.nDays)}</li>\n        <li>{UI.renderVizBox(\"# words\", total.nWords)}</li>\n        <li>{UI.renderVizBox(\"# characters\", total.nChars)}</li>\n      </ul>\n\n      {UI.renderBarChart(senders.all)}\n      {UI.renderRadar(senders.times, labels)}\n      {UI.renderPieChart(senders.all)}\n      {UI.renderBrushBarChart(senders.days, labels)}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default class Loader extends React.Component {\n  render() {\n    return <p>Loading ...</p>;\n  }\n}\n","import React from 'react';\n\nexport default class Icon extends React.Component {\n  render() {\n    const { name } = this.props;\n    const className = `fa fa-${name}`;\n\n    return <i className={className}></i>;\n  }\n};","/**\n * file upload\n * https://speckyboy.com/custom-file-upload-fields/\n * https://codepen.io/stebaker/pen/tImBc\n */\n\nimport React from 'react';\n\nimport Icon from './icon';\n\nexport default class FileUpload extends React.Component {\n  onChange = (e) => {\n    this.props.onChangeHandler(e)\n  }\n\n  render() {\n    const name = this.props.name || 'file';\n\n    return (<div className=\"file-upload-wrapper\">\n      <div className=\"file-upload\">\n        <input accept={this.props.accept} type=\"file\" name={name} onChange={this.props.onChange}/>\n        <Icon name=\"arrow-up\"/>\n      </div>\n    </div>);\n  }\n}\n","import React from \"react\";\n\nimport Analysis from \"./analysis/index\";\nimport Loader from \"./components/loader\";\nimport FileUpload from \"./components/file-upload\";\nimport Icon from \"./components/icon\";\n\n//import sampleData from './sampleData.js';\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      isAnalyzed: false,\n      data: null,\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n\n  onChangeHandler = (event) => {\n    this.setState({ isLoading: true });\n\n    const file = event.target.files[0];\n\n    const fileReader = new FileReader();\n    fileReader.onloadend = (a) => {\n      const data = fileReader.result;\n      const isAnalyzed = true;\n      const isLoading = false;\n\n      this.setState({ data, isAnalyzed, isLoading });\n    };\n\n    // this function calls `onloadend`\n    fileReader.readAsText(file);\n  };\n\n  reset = () => {\n    const isAnalyzed = false;\n\n    this.setState({ isAnalyzed });\n  };\n\n  renderBody() {\n    const { data, isAnalyzed, isLoading } = this.state;\n\n    if (isLoading) {\n      return <Loader />;\n    }\n\n    if (!isAnalyzed || !data) {\n      //return <input accept=\".txt\" type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>;\n      return (\n        <FileUpload\n          accept=\".txt\"\n          type=\"file\"\n          name=\"file\"\n          onChange={this.onChangeHandler}\n        />\n      );\n    }\n\n    // for dev\n    // const data = sampleData;\n\n    return (\n      <div>\n        <p>\n          <button onClick={() => this.reset()}>\n            <Icon name=\"arrow-left\" /> Reset\n          </button>\n        </p>\n        <Analysis data={data} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>WhatsApp Chat Analyzer</h1>\n          {this.renderBody()}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}