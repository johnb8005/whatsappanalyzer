{"version":3,"sources":["charts/barchart.js","charts/colors.js","charts/radar.js","charts/pie.js","charts/brushbar.js","analysis/utils.js","analysis/index.js","components/loader.js","components/icon.js","components/file-upload.js","App.js","serviceWorker.js","index.js"],"names":["MyBarChart","data","this","props","react_default","a","createElement","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","PureComponent","colors","nColors","length","getColor","idx","Example","_this$props","labels","cx","cy","outerRadius","map","l","i","key","name","stroke","fillOpacity","onMouseEnter","onPieEnter","innerRadius","paddingAngle","label","entry","index","concat","y","verticalAlign","wrapperStyle","lineHeight","jsfiddleUrl","formatNumber","Utils","number","padding","string","_Utils$date","date","formatDate","utilFormatTime","formatTime","countDaysDiffBtnDates","formatDateAndTime","d","parseLine","line","re","arguments","undefined","attempt","exec","_a","Object","slicedToArray","month","day","year","hour","minute","sender","content","formatDateParse","time","toDate","c","datestr","Date","countWordsLine","split","getTotals","n","firstMessage","lastMessage","console","log","firstTime","lastTime","nDays","_count","nWords","nChars","reduce","b","count","analysis","_ref","renderVizBox","value","U","lines","filter","Error","senders","times","days","all","hourIndex","Number","substr","messages","chars","words","total","keys","className","objMap","r","k","barchart_MyBarChart","renderBarChart","objectSpread2","radar_Example","renderRadar","pie_Example","renderPieChart","rt","arr","fn","brushbar_Example","renderBrushBarChart","Loader","React","Component","Icon","FileUpload","onChange","e","_this","onChangeHandler","accept","type","icon_Icon","App","classCallCheck","_super","call","event","setState","isLoading","file","target","files","fileReader","FileReader","onloadend","result","isAnalyzed","readAsText","reset","state","bind","assertThisInitialized","_this2","_this$state","loader_Loader","onClick","file_upload_FileUpload","renderBody","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d800a068.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport default class MyBarChart extends PureComponent {\n  render() {\n    const { data } = this.props;\n\n    if (!data) {\n      return null;\n    }\n\n    return (\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"value\" fill=\"#8884d8\" />\n      </BarChart>\n    );\n  }\n}","const colors = ['#1f618d', '#6c3483', '#3498db', '#DAF7A6', '#FFC300', '#FF5733'];\nconst nColors = colors.length;\n\n// simple helper to make sure we never call a color that does not exist\nexport const getColor = idx => colors[idx % nColors];","import React, { PureComponent } from 'react';\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Legend\n} from 'recharts';\n\nimport { getColor } from './colors';\n\nexport default class Example extends PureComponent {\n  render() {\n    const { data, labels } = this.props;\n\n    return (\n      <RadarChart cx={300} cy={250} outerRadius={150} width={500} height={500} data={data}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"name\" />\n        <PolarRadiusAxis />\n        {labels.map((l, i) => {\n          return <Radar key={i} name={l} dataKey={l} stroke={getColor(i)} fill={getColor(i)} fillOpacity={0.6} />\n        })}\n        <Legend/>\n      </RadarChart>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie, Cell, Legend,\n} from 'recharts';\n\nimport { getColor } from './colors';\n\nexport default class Example extends PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\n        <Pie\n          data={data}\n          cx={120}\n          cy={200}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          dataKey=\"value\"\n          label\n        >\n          {\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={getColor(index)} label />)\n          }\n\n        </Pie>\n        <Legend/>\n      </PieChart>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport { getColor } from './colors';\n\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\n\n  render() {\n    const { data, labels } = this.props;\n    return (\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        \n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n\n        {labels.map((l, i) => {\n          return <Bar key={i} dataKey={l} fill={getColor(i)} />\n        })}\n        <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n      </BarChart>\n    );\n  }\n}\n","import Utils from \"@nexys/utils\";\n\nconst { formatNumber } = Utils.number;\nconst { padding } = Utils.string;\nconst {\n  formatDate,\n  formatTime: utilFormatTime,\n  countDaysDiffBtnDates,\n} = Utils.date;\n\nconst formatDateAndTime = (d) => formatDate(d) + \" - \" + utilFormatTime(d);\n\nexport { formatNumber, formatDateAndTime };\n\n// todo add to utils\n/**\n * [description]\n * @param  {[type]}   arr [description]\n * @param  fn  function that maps the value that is transposed to a potential other value. By default returns same value\n * @return {[type]}       [description]\n */\nexport const transpose = (arr, fn = (a) => a) => {\n  const r = {};\n\n  Object.keys(arr).map((idx) => {\n    return Object.keys(arr[idx]).map((d) => {\n      if (!r[d]) {\n        r[d] = {};\n      }\n\n      r[d][idx] = fn(arr[idx][d]);\n\n      return true;\n    });\n  });\n\n  return r;\n};\n\nconst formatDateParse = (day, month, year) => {\n  return `20${year}-${padding(month, 2)}-${padding(day, 2)}`;\n};\n\nconst formatTime = (hour, minute) => {\n  return `${padding(hour, 2)}:${padding(minute, 2)}:00`;\n};\n\nconst parseLine = (\n  line,\n  re = /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2}), (\\d{1,2}):(\\d{2}) [AP]M - ([^:]+):(.*)/g, // regex with AM/PM\n  attempt = 1\n) => {\n  const a = re.exec(line);\n\n  // check if parsing was succesful and that we get the expected amount of fields\n  if (a && a.length === 8) {\n    /* eslint-disable no-unused-vars */\n    const [_, month, day, year, hour, minute, sender, content] = a;\n    /* eslint-enable no-unused-vars */\n\n    const date = formatDateParse(day, month, year);\n    const time = formatTime(hour, minute);\n\n    return { date, time, sender, content };\n  }\n\n  if (attempt === 1) {\n    // try  without AM/PM\n    return parseLine(\n      line,\n      /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2}), (\\d{1,2}):(\\d{2}) - ([^:]+):(.*)/g,\n      2\n    );\n  }\n\n  return null;\n};\n\nexport const getContent = (lines) =>\n  lines.map((line) => parseLine(line)).filter((line) => line !== null);\n\nexport const getSenders = (content) => {\n  const senders = {\n    times: {},\n    days: {},\n    all: {},\n  };\n\n  // init times\n  for (let i = 0; i < 24; i++) {\n    senders.times[i] = {};\n  }\n\n  content.map((c) => {\n    const sender = senders.all[c.sender];\n\n    // init object with new sender key\n    // do it both for `all` and days\n    if (!sender) {\n      senders.all[c.sender] = 0;\n      senders.days[c.sender] = {};\n    }\n\n    senders.all[c.sender] += 1;\n\n    // update hour attribute\n    const hourIndex = Number(c.time.substr(0, 2));\n\n    const senderHour = senders.times[hourIndex][c.sender];\n\n    if (!senderHour) {\n      senders.times[hourIndex][c.sender] = 0;\n    }\n\n    senders.times[hourIndex][c.sender] += 1;\n    // end hours\n\n    // update days attribute\n    // here we don't have to check whether sender already exist since it was added earlier, only check for day\n    if (!senders.days[c.sender][c.date]) {\n      senders.days[c.sender][c.date] = { messages: 0, chars: 0, words: 0 };\n    }\n\n    // dummy var\n    const d = senders.days[c.sender][c.date];\n\n    d.messages += 1;\n    d.chars += c.content.length;\n    d.words += countWordsLine(c.content);\n    // end days\n\n    return true;\n  });\n\n  return senders;\n};\n\nconst toDate = (c) => {\n  const datestr = c.date + \"T\" + c.time;\n\n  return new Date(datestr);\n};\nconst countWordsLine = (line) => line.split(/\\s+/).length;\n\nconst count = (content) => {\n  return content\n    .map((c) => {\n      const nWords = countWordsLine(c.content);\n      const nChars = c.content.length;\n\n      return { nWords, nChars };\n    })\n    .reduce((a, b) => {\n      return {\n        nWords: a.nWords + b.nWords,\n        nChars: a.nChars + b.nChars,\n      };\n    });\n};\n\nexport const getTotals = (content) => {\n  const n = content.length;\n  const firstMessage = content[0];\n  const lastMessage = content[n - 1];\n\n  console.log({ firstMessage, lastMessage });\n\n  const firstTime = toDate(firstMessage);\n  const lastTime = toDate(lastMessage);\n\n  const nDays = countDaysDiffBtnDates(firstTime, lastTime);\n\n  const { nWords, nChars } = count(content);\n\n  return { n, firstTime, lastTime, nDays, nWords, nChars };\n};\n","import React from \"react\";\n\nimport BarChart from \"../charts/barchart\";\nimport RadarChart from \"../charts/radar\";\nimport PieChart from \"../charts/pie\";\nimport BrushBarChart from \"../charts/brushbar\";\n\nimport * as U from \"./utils\";\n\nexport default ({ data }) => {\n  const renderBarChart = (objMap) => {\n    // turn object into array (right format for barchart)\n    const r = Object.keys(objMap).map((k) => {\n      return { name: k, value: objMap[k] };\n    });\n\n    return <BarChart data={r} />;\n  };\n\n  const renderRadar = (data, labels) => {\n    const r = Object.keys(data).map((idx) => {\n      return { name: idx, ...data[idx] };\n    });\n\n    return <RadarChart data={r} labels={labels} />;\n  };\n\n  const renderPieChart = (objMap) => {\n    // turn object into array (right format for barchart)\n    const r = Object.keys(objMap).map((k) => {\n      return { name: k, value: objMap[k] };\n    });\n    return <PieChart data={r} />;\n  };\n\n  const renderBrushBarChart = (objMap, labels) => {\n    const rt = U.transpose(objMap, (a) => a.messages);\n    const r = Object.keys(rt).map((k) => {\n      return {\n        name: k,\n        ...rt[k],\n      };\n    });\n\n    return <BrushBarChart data={r} labels={labels} />;\n  };\n\n  const renderVizBox = (label, value) => {\n    return (\n      <div>\n        {label}: {U.formatNumber(value)}\n      </div>\n    );\n  };\n\n  const lines = data.split(\"\\n\");\n\n  const content = U.getContent(lines);\n  if (content.length === 0) {\n    throw Error(\"could not parse file\");\n  }\n  const senders = U.getSenders(content);\n  const total = U.getTotals(content);\n\n  const labels = Object.keys(senders.all);\n\n  return (\n    <div>\n      <p className=\"pull-right\">\n        from {U.formatDateAndTime(total.firstTime)} until{\" \"}\n        {U.formatDateAndTime(total.lastTime)}\n      </p>\n      <h2>Totals</h2>\n\n      <ul>\n        <li>{renderVizBox(\"# messages\", total.n)}</li>\n        <li>{renderVizBox(\"# days\", total.nDays)}</li>\n        <li>{renderVizBox(\"# words\", total.nWords)}</li>\n        <li>{renderVizBox(\"# characters\", total.nChars)}</li>\n      </ul>\n\n      {renderBarChart(senders.all)}\n      {renderRadar(senders.times, labels)}\n      {renderPieChart(senders.all)}\n      {renderBrushBarChart(senders.days, labels)}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default class Loader extends React.Component {\n  render() {\n    return <p>Loading ...</p>;\n  }\n}\n","import React from 'react';\n\nexport default class Icon extends React.Component {\n  render() {\n    const { name } = this.props;\n    const className = `fa fa-${name}`;\n\n    return <i className={className}></i>;\n  }\n};","/**\n * file upload\n * https://speckyboy.com/custom-file-upload-fields/\n * https://codepen.io/stebaker/pen/tImBc\n */\n\nimport React from 'react';\n\nimport Icon from './icon';\n\nexport default class FileUpload extends React.Component {\n  onChange = (e) => {\n    this.props.onChangeHandler(e)\n  }\n\n  render() {\n    const name = this.props.name || 'file';\n\n    return (<div className=\"file-upload-wrapper\">\n      <div className=\"file-upload\">\n        <input accept={this.props.accept} type=\"file\" name={name} onChange={this.props.onChange}/>\n        <Icon name=\"arrow-up\"/>\n      </div>\n    </div>);\n  }\n}\n","import React from \"react\";\n\nimport Analysis from \"./analysis/index\";\nimport Loader from \"./components/loader\";\nimport FileUpload from \"./components/file-upload\";\nimport Icon from \"./components/icon\";\n\n//import sampleData from './sampleData.js';\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      isAnalyzed: false,\n      data: null,\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n\n  onChangeHandler = (event) => {\n    this.setState({ isLoading: true });\n\n    const file = event.target.files[0];\n\n    const fileReader = new FileReader();\n    fileReader.onloadend = (a) => {\n      const data = fileReader.result;\n      const isAnalyzed = true;\n      const isLoading = false;\n\n      console.log(data);\n\n      this.setState({ data, isAnalyzed, isLoading });\n    };\n\n    // this function calls `onloadend`\n    fileReader.readAsText(file);\n  };\n\n  reset = () => {\n    const isAnalyzed = false;\n\n    this.setState({ isAnalyzed });\n  };\n\n  renderBody() {\n    const { data, isAnalyzed, isLoading } = this.state;\n\n    if (isLoading) {\n      return <Loader />;\n    }\n\n    if (!isAnalyzed || !data) {\n      //return <input accept=\".txt\" type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>;\n      return (\n        <FileUpload\n          accept=\".txt\"\n          type=\"file\"\n          name=\"file\"\n          onChange={this.onChangeHandler}\n        />\n      );\n    }\n\n    // for dev\n    // const data = sampleData;\n\n    return (\n      <div>\n        <p>\n          <button onClick={() => this.reset()}>\n            <Icon name=\"arrow-left\" /> Reset\n          </button>\n        </p>\n        <Analysis data={data} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>WhatsApp Chat Analyzer</h1>\n          {this.renderBody()}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}