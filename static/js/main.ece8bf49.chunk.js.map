{"version":3,"sources":["charts/barchart.js","charts/colors.js","charts/radar.js","charts/pie.js","charts/brushbar.js","analysis.js","components/loader.js","components/icon.js","components/file-upload.js","App.js","serviceWorker.js","index.js"],"names":["MyBarChart","data","this","props","react_default","a","createElement","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","PureComponent","colors","nColors","length","getColor","idx","Example","_this$props","labels","cx","cy","outerRadius","map","l","i","key","name","stroke","fillOpacity","onMouseEnter","onPieEnter","innerRadius","paddingAngle","label","entry","index","concat","y","verticalAlign","wrapperStyle","lineHeight","jsfiddleUrl","formatNumber","Utils","number","padding","string","_Utils$date","date","formatDate","utilFormatTime","formatTime","countDaysDiffBtnDates","formatDateAndTime","d","transpose","arr","fn","arguments","undefined","r","Object","keys","parseLine","line","exec","_a","slicedToArray","month","day","year","hour","minute","sender","content","formatDateParse","time","toDate","c","datestr","Date","countWordsLine","split","getTotals","n","firstMessage","lastMessage","firstTime","lastTime","nDays","_count","nWords","nChars","reduce","b","count","Analysis","_this","classCallCheck","_super","call","renderBarChart","objMap","k","value","barchart_MyBarChart","renderRadar","objectSpread2","radar_Example","renderPieChart","pie_Example","renderBrushBarChart","rt","messages","brushbar_Example","renderVizBox","state","lines","filter","getContent","senders","times","days","all","hourIndex","Number","substr","chars","words","getSenders","total","className","React","Component","Loader","Icon","FileUpload","onChange","e","onChangeHandler","accept","type","icon_Icon","App","event","setState","isLoading","file","target","files","fileReader","FileReader","onloadend","result","isAnalyzed","readAsText","reset","bind","assertThisInitialized","_this2","_this$state","loader_Loader","onClick","analysis_Analysis","file_upload_FileUpload","renderBody","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ece8bf49.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport default class MyBarChart extends PureComponent {\n  render() {\n    const { data } = this.props;\n\n    if (!data) {\n      return null;\n    }\n\n    return (\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"value\" fill=\"#8884d8\" />\n      </BarChart>\n    );\n  }\n}","const colors = ['#1f618d', '#6c3483', '#3498db', '#DAF7A6', '#FFC300', '#FF5733'];\nconst nColors = colors.length;\n\n// simple helper to make sure we never call a color that does not exist\nexport const getColor = idx => colors[idx % nColors];","import React, { PureComponent } from 'react';\nimport {\n  Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Legend\n} from 'recharts';\n\nimport { getColor } from './colors';\n\nexport default class Example extends PureComponent {\n  render() {\n    const { data, labels } = this.props;\n\n    return (\n      <RadarChart cx={300} cy={250} outerRadius={150} width={500} height={500} data={data}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey=\"name\" />\n        <PolarRadiusAxis />\n        {labels.map((l, i) => {\n          return <Radar key={i} name={l} dataKey={l} stroke={getColor(i)} fill={getColor(i)} fillOpacity={0.6} />\n        })}\n        <Legend/>\n      </RadarChart>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie, Cell, Legend,\n} from 'recharts';\n\nimport { getColor } from './colors';\n\nexport default class Example extends PureComponent {\n  render() {\n    const { data } = this.props;\n    return (\n      <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\n        <Pie\n          data={data}\n          cx={120}\n          cy={200}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          dataKey=\"value\"\n          label\n        >\n          {\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={getColor(index)} label />)\n          }\n\n        </Pie>\n        <Legend/>\n      </PieChart>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport { getColor } from './colors';\n\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/mc8r7e6p/';\n\n  render() {\n    const { data, labels } = this.props;\n    return (\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        \n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" />\n\n        {labels.map((l, i) => {\n          return <Bar key={i} dataKey={l} fill={getColor(i)} />\n        })}\n        <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n      </BarChart>\n    );\n  }\n}\n","import React from 'react';\n\nimport BarChart from './charts/barchart';\nimport RadarChart from './charts/radar';\nimport PieChart from './charts/pie';\nimport BrushBarChart from './charts/brushbar';\n\nimport Utils from  '@nexys/utils'\n\n//const number = utils;\nconst { formatNumber } = Utils.number;\nconst { padding } = Utils.string;\nconst { formatDate, formatTime: utilFormatTime, countDaysDiffBtnDates } = Utils.date;\n\nconst formatDateAndTime = d => formatDate(d) + ' - ' + utilFormatTime(d);\n\n// todo add to utils\n/**\n * [description]\n * @param  {[type]}   arr [description]\n * @param  fn  function that maps the value that is transposed to a potential other value. By default returns same value\n * @return {[type]}       [description]\n */\nconst transpose = (arr, fn = a => a) => {\n  const r = {};\n\n  Object.keys(arr).map(idx => {\n    return Object.keys(arr[idx]).map(d => {\n      if (!r[d]) {\n        r[d] = {};\n      }\n\n      r[d][idx] = fn(arr[idx][d]);\n\n      return true;\n    })\n  });\n\n  return r;\n}\n\n/*\ninput and expected output to add to tests\nconst a = {\n  'adriana': {a: 1, b: 2},\n  'johan': {a: 3, b: 4},\n}\n\nconst b = {\n  a: {\n    adriana: 1,\n    johan: 3\n  },\n  b: {\n    adriana: 2,\n    johan: 4\n  }\n}*/\n\nconst formatDateParse = (day, month, year) => {\n  return `20${year}-${padding(month, 2)}-${padding(day, 2)}`;\n}\n\nconst formatTime = (hour, minute) => {\n  return `${padding(hour, 2)}:${padding(minute, 2)}:00`;\n}\n\nconst parseLine = line => {\n  const re = /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2}), (\\d{1,2}):(\\d{2}) - ([^:]+):(.*)/g;\n  const a = re.exec(line);\n\n  // check if parsing was succesful and that we get the expected amount of fields\n  if (a && a.length === 8) {\n    /* eslint-disable no-unused-vars */\n    const [_, month, day, year, hour, minute, sender, content] = a;\n    /* eslint-enable no-unused-vars */\n\n    const date = formatDateParse(day, month, year);\n    const time = formatTime(hour, minute);\n\n    return {date, time, sender, content};\n  } else {\n    return null;\n  }\n}\n\nconst getContent = lines => {\n  return lines\n    .map(line => parseLine(line))\n    .filter(line => line !== null);\n}\n\nconst getSenders = content => {\n  const senders = {\n    times: {},\n    days: {},\n    all: {}\n  };\n\n  // init times\n  for (let i = 0; i<24; i++) {\n    senders.times[i] = {};\n  }\n\n  content.map(c => {\n    const sender = senders.all[c.sender];\n\n    // init object with new sender key\n    // do it both for `all` and days\n    if(!sender) {\n      senders.all[c.sender] = 0;\n      senders.days[c.sender] = {};\n    }\n\n    senders.all[c.sender] += 1;\n\n    // update hour attribute\n    const hourIndex = Number(c.time.substr(0,2));\n\n    const senderHour = senders.times[hourIndex][c.sender];\n\n    if (!senderHour) {\n      senders.times[hourIndex][c.sender] = 0\n    }\n\n    senders.times[hourIndex][c.sender] += 1; \n    // end hours\n\n    // update days attribute\n    // here we don't have to check whether sender already exist since it was added earlier, only check for day    \n    if (!senders.days[c.sender][c.date]) {\n      senders.days[c.sender][c.date] = {messages: 0, chars: 0, words: 0};\n    }\n\n    // dummy var\n    const d = senders.days[c.sender][c.date];\n\n    d.messages += 1;\n    d.chars += c.content.length; \n    d.words += countWordsLine(c.content);\n    // end days\n\n    return true;\n  });\n\n  return senders;\n}\n\nconst toDate = c => {\n  const datestr = c.date + 'T' + c.time;\n\n  return new Date(datestr);\n}\nconst countWordsLine = line => line.split(/\\s+/).length;\n\nconst count = content => {\n  return content\n    .map(c => {\n      const nWords = countWordsLine(c.content);\n      const nChars = c.content.length;\n\n      return {nWords, nChars};\n    })\n    .reduce((a, b) => {\n      return {\n        nWords: a.nWords + b.nWords,\n        nChars: a.nChars + b.nChars\n      };\n    });\n}\n\nconst getTotals = content => {\n  const n = content.length;\n  const firstMessage = content[0];\n  const lastMessage = content[n - 1];\n\n  const firstTime = toDate(firstMessage);\n  const lastTime = toDate(lastMessage);\n\n  const nDays = countDaysDiffBtnDates(firstTime, lastTime);\n\n  const {nWords, nChars} = count(content)\n\n  return {n, firstTime, lastTime, nDays, nWords, nChars};\n}\n\nexport default class Analysis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderBarChart = (objMap) => {\n    // turn object into array (right format for barchart)\n    const r = Object.keys(objMap).map(k => {\n      return {name: k, value: objMap[k]};\n    });\n\n    return <BarChart data={r}/>\n  }\n\n  renderRadar = (data, labels) => {\n    const r = Object.keys(data).map(idx => {\n      return {name: idx, ...data[idx]}\n    });\n\n    return <RadarChart data={r} labels={labels}/>;\n  }\n\n  renderPieChart = objMap => {\n\n    // turn object into array (right format for barchart)\n    const r = Object.keys(objMap).map(k => {\n      return {name: k, value: objMap[k]};\n    });\n    return <PieChart data={r}/>\n  }\n\n  renderBrushBarChart = (objMap, labels) => {\n    const rt = transpose(objMap, a => a.messages);\n    const r = Object.keys(rt).map(k => {\n      return {\n        name: k, ...rt[k]\n      }\n    });\n\n    return <BrushBarChart data={r} labels={labels}/>\n  }\n\n  renderVizBox = (label, value) => {\n    return <div>{label}: {formatNumber(value)}</div>\n  }\n\n  render() {\n    const lines = this.props.data.split('\\n');\n    const content = getContent(lines);\n    const senders = getSenders(content);\n\n    const total = getTotals(content);\n\n    const labels = Object.keys(senders.all);\n    \n    return <div>\n      <p className=\"pull-right\">from {formatDateAndTime(total.firstTime)} until {formatDateAndTime(total.lastTime)}</p>\n      <h2>Totals</h2>\n\n      <ul>\n        <li>{this.renderVizBox('# messages', total.n)}</li>\n        <li>{this.renderVizBox('# days', total.nDays)}</li>\n        <li>{this.renderVizBox('# words', total.nWords)}</li>\n        <li>{this.renderVizBox('# characters', total.nChars)}</li>\n      </ul>\n\n\n\n\n      {this.renderBarChart(senders.all)}\n      {this.renderRadar(senders.times, labels)}\n      {this.renderPieChart(senders.all)}\n      {this.renderBrushBarChart(senders.days, labels)}\n      \n    </div>;\n  }\n}","import React from 'react';\n\nexport default class Loader extends React.Component {\n  render() {\n    return <p>Loading ...</p>;\n  }\n}\n","import React from 'react';\n\nexport default class Icon extends React.Component {\n  render() {\n    const { name } = this.props;\n    const className = `fa fa-${name}`;\n\n    return <i className={className}></i>;\n  }\n};","/**\n * file upload\n * https://speckyboy.com/custom-file-upload-fields/\n * https://codepen.io/stebaker/pen/tImBc\n */\n\nimport React from 'react';\n\nimport Icon from './icon';\n\nexport default class FileUpload extends React.Component {\n  onChange = (e) => {\n    this.props.onChangeHandler(e)\n  }\n\n  render() {\n    const name = this.props.name || 'file';\n\n    return (<div className=\"file-upload-wrapper\">\n      <div className=\"file-upload\">\n        <input accept={this.props.accept} type=\"file\" name={name} onChange={this.props.onChange}/>\n        <Icon name=\"arrow-up\"/>\n      </div>\n    </div>);\n  }\n}\n","import React from 'react';\n\nimport Analysis from './analysis';\nimport Loader from './components/loader';\nimport FileUpload from './components/file-upload';\nimport Icon from './components/icon';\n\n//import sampleData from './sampleData.js';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      isAnalyzed: false,\n      data: null\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n  }\n\n  onChangeHandler = event => {\n    this.setState({isLoading: true});\n\n    const file = event.target.files[0];\n\n    const fileReader = new FileReader();\n    fileReader.onloadend = a => {\n      const data = fileReader.result;\n      const isAnalyzed = true;\n      const isLoading = false;\n\n      this.setState({data, isAnalyzed, isLoading})\n    };\n    \n    // this function calls `onloadend`\n    fileReader.readAsText(file);\n  }\n\n  reset = () => {\n    const isAnalyzed = false;\n\n    this.setState({isAnalyzed});\n  }\n\n  renderBody() {\n    const { data, isAnalyzed, isLoading } = this.state;\n\n    if (isLoading) {\n      return <Loader/>\n    }\n\n    if (!isAnalyzed || !data) {\n      //return <input accept=\".txt\" type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>;\n      return <FileUpload accept=\".txt\" type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>;\n    }\n\n    // for dev\n    // const data = sampleData;\n\n    return (<div>\n      <p><button onClick={() => this.reset()}><Icon name=\"arrow-left\"/> Reset</button></p>\n      <Analysis data={data}/>\n    </div>);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>WhatsApp Chat Analyzer</h1>\n          {this.renderBody()}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}